/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dnebinger.webstory.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedGroupedModel;
import com.liferay.portal.kernel.model.TrashedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the WebStory service. Represents a row in the &quot;WS_WebStory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.dnebinger.webstory.model.impl.WebStoryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.dnebinger.webstory.model.impl.WebStoryImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WebStory
 * @generated
 */
@ProviderType
public interface WebStoryModel
	extends BaseModel<WebStory>, MVCCModel, ShardedModel, StagedGroupedModel,
			TrashedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a web story model instance should use the {@link WebStory} interface instead.
	 */

	/**
	 * Returns the primary key of this web story.
	 *
	 * @return the primary key of this web story
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this web story.
	 *
	 * @param primaryKey the primary key of this web story
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this web story.
	 *
	 * @return the mvcc version of this web story
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this web story.
	 *
	 * @param mvccVersion the mvcc version of this web story
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this web story.
	 *
	 * @return the uuid of this web story
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this web story.
	 *
	 * @param uuid the uuid of this web story
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the web story ID of this web story.
	 *
	 * @return the web story ID of this web story
	 */
	public long getWebStoryId();

	/**
	 * Sets the web story ID of this web story.
	 *
	 * @param webStoryId the web story ID of this web story
	 */
	public void setWebStoryId(long webStoryId);

	/**
	 * Returns the group ID of this web story.
	 *
	 * @return the group ID of this web story
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this web story.
	 *
	 * @param groupId the group ID of this web story
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this web story.
	 *
	 * @return the company ID of this web story
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this web story.
	 *
	 * @param companyId the company ID of this web story
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this web story.
	 *
	 * @return the user ID of this web story
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this web story.
	 *
	 * @param userId the user ID of this web story
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this web story.
	 *
	 * @return the user uuid of this web story
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this web story.
	 *
	 * @param userUuid the user uuid of this web story
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this web story.
	 *
	 * @return the user name of this web story
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this web story.
	 *
	 * @param userName the user name of this web story
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this web story.
	 *
	 * @return the create date of this web story
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this web story.
	 *
	 * @param createDate the create date of this web story
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this web story.
	 *
	 * @return the modified date of this web story
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this web story.
	 *
	 * @param modifiedDate the modified date of this web story
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the last publish date of this web story.
	 *
	 * @return the last publish date of this web story
	 */
	@Override
	public Date getLastPublishDate();

	/**
	 * Sets the last publish date of this web story.
	 *
	 * @param lastPublishDate the last publish date of this web story
	 */
	@Override
	public void setLastPublishDate(Date lastPublishDate);

	/**
	 * Returns the title of this web story.
	 *
	 * @return the title of this web story
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this web story.
	 *
	 * @param title the title of this web story
	 */
	public void setTitle(String title);

	/**
	 * Returns the blurb of this web story.
	 *
	 * @return the blurb of this web story
	 */
	@AutoEscape
	public String getBlurb();

	/**
	 * Sets the blurb of this web story.
	 *
	 * @param blurb the blurb of this web story
	 */
	public void setBlurb(String blurb);

	/**
	 * Returns the url of this web story.
	 *
	 * @return the url of this web story
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this web story.
	 *
	 * @param url the url of this web story
	 */
	public void setUrl(String url);

	/**
	 * Returns the url title of this web story.
	 *
	 * @return the url title of this web story
	 */
	@AutoEscape
	public String getUrlTitle();

	/**
	 * Sets the url title of this web story.
	 *
	 * @param urlTitle the url title of this web story
	 */
	public void setUrlTitle(String urlTitle);

	/**
	 * Returns the status of this web story.
	 *
	 * @return the status of this web story
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this web story.
	 *
	 * @param status the status of this web story
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this web story.
	 *
	 * @return the status by user ID of this web story
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this web story.
	 *
	 * @param statusByUserId the status by user ID of this web story
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this web story.
	 *
	 * @return the status by user uuid of this web story
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this web story.
	 *
	 * @param statusByUserUuid the status by user uuid of this web story
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this web story.
	 *
	 * @return the status by user name of this web story
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this web story.
	 *
	 * @param statusByUserName the status by user name of this web story
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this web story.
	 *
	 * @return the status date of this web story
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this web story.
	 *
	 * @param statusDate the status date of this web story
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the trash entry created when this web story was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this web story.
	 *
	 * @return the trash entry created when this web story was moved to the Recycle Bin
	 */
	@Override
	public com.liferay.trash.kernel.model.TrashEntry getTrashEntry()
		throws PortalException;

	/**
	 * Returns the class primary key of the trash entry for this web story.
	 *
	 * @return the class primary key of the trash entry for this web story
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this web story.
	 *
	 * @return the trash handler for this web story
	 * @deprecated As of Judson (7.1.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public com.liferay.portal.kernel.trash.TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this web story is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this web story is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this web story is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this web story is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isInTrashExplicitly();

	@Override
	public boolean isInTrashImplicitly();

	/**
	 * Returns <code>true</code> if this web story is approved.
	 *
	 * @return <code>true</code> if this web story is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this web story is denied.
	 *
	 * @return <code>true</code> if this web story is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this web story is a draft.
	 *
	 * @return <code>true</code> if this web story is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this web story is expired.
	 *
	 * @return <code>true</code> if this web story is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this web story is inactive.
	 *
	 * @return <code>true</code> if this web story is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this web story is incomplete.
	 *
	 * @return <code>true</code> if this web story is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this web story is pending.
	 *
	 * @return <code>true</code> if this web story is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this web story is scheduled.
	 *
	 * @return <code>true</code> if this web story is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}